{"ast":null,"code":"var _jsxFileName = \"/Users/luisgalindo/Documents/ReactJS/advice_app/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      advice: ''\n    };\n\n    this.fetchAdvice = () => {\n      axios.get('https://api.adviceslip.com/advice').then(response => {\n        // Access the advice from the API = data.slip.advice\n        const {\n          advice\n        } = response.data.slip; // If the name of the state and the variable have the same name we can ommit advice: advice\n\n        this.setState({\n          advice\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  // We have to call the function advice for the first time when the page loads\n  componentDidMount() {\n    this.fetchAdvice();\n  } //This is a method of the class, we don't need to add const\n\n\n  render() {\n    const {\n      advice\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, advice), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, \"GIVE ME AN ADVICE!\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/luisgalindo/Documents/ReactJS/advice_app/src/App.js"],"names":["React","axios","App","Component","state","advice","fetchAdvice","get","then","response","data","slip","setState","catch","error","console","log","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,MAAM,EAAE;AADJ,KADsB;;AAAA,SAW9BC,WAX8B,GAWhB,MAAM;AAChBL,MAAAA,KAAK,CAACM,GAAN,CAAU,mCAAV,EACKC,IADL,CACWC,QAAD,IAAc;AAChB;AACA,cAAM;AAAEJ,UAAAA;AAAF,YAAaI,QAAQ,CAACC,IAAT,CAAcC,IAAjC,CAFgB,CAGhB;;AACA,aAAKC,QAAL,CAAc;AAAEP,UAAAA;AAAF,SAAd;AACH,OANL,EAOKQ,KAPL,CAOYC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OATL;AAUH,KAtB6B;AAAA;;AAK9B;AACAG,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,WAAL;AACH,GAR6B,CAU9B;;;AAcAY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBC,MAAzB,CADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAFJ,CADJ,CADJ;AAUH;;AApC6B;;AAuClC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport \"./App.css\"\n\nclass App extends React.Component {\n    state = {\n        advice: ''\n    }\n\n    // We have to call the function advice for the first time when the page loads\n    componentDidMount() {\n        this.fetchAdvice()\n    }\n\n    //This is a method of the class, we don't need to add const\n    fetchAdvice = () => {\n        axios.get('https://api.adviceslip.com/advice')\n            .then((response) => {\n                // Access the advice from the API = data.slip.advice\n                const { advice } = response.data.slip\n                // If the name of the state and the variable have the same name we can ommit advice: advice\n                this.setState({ advice })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    render() {\n        const { advice } = this.state\n        return(\n            <div className='app'>\n                <div className='card'>\n                    <h1 className='heading'>{advice}</h1>\n                    <button className='button'>\n                        <span>GIVE ME AN ADVICE!</span>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}